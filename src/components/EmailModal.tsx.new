'use client';

import { useState } from 'react';
import { useTranslation } from 'react-i18next';

interface EmailModalProps {
  isOpen: boolean;
  onSubmit: (email: string) => Promise<void>;
}

export default function EmailModal({ isOpen, onSubmit }: EmailModalProps) {
  const { t } = useTranslation();
  const [email, setEmail] = useState('');
  const [error, setError] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);

  const validateEmail = (email: string) => {
    const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return regex.test(email);
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');

    if (!email) {
      setError(t('email.required') || 'Email is required');
      return;
    }

    if (!validateEmail(email)) {
      setError(t('email.invalid') || 'Please enter a valid email address');
      return;
    }

    try {
      setIsSubmitting(true);
      await onSubmit(email);
    } catch (error) {
      setError(t('email.error') || 'Failed to save email');
    } finally {
      setIsSubmitting(false);
    }
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-8 max-w-md w-full mx-4">
        <h2 className="text-2xl font-bold mb-4">{t('email.welcome')}</h2>
        <p className="text-gray-600 mb-6">{t('email.description')}</p>
        <form onSubmit={handleSubmit}>
          <div className="mb-4">
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder={t('email.placeholder') || 'Enter your email'}
              className="w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-orange-500 focus:border-transparent outline-none"
              disabled={isSubmitting}
            />
            {error && <p className="text-red-500 text-sm mt-1">{error}</p>}
          </div>
          <button
            type="submit"
            disabled={isSubmitting}
            className="w-full bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600 transition-colors disabled:bg-orange-300"
          >
            {isSubmitting ? t('email.submitting') : t('email.submit')}
          </button>
        </form>
      </div>
    </div>
  )
}